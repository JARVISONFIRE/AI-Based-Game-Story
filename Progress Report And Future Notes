Week 1 : March 23, 2025

Roadmap : 
// Game idea and content
// turnTimer - The Turn Timer script counts down the duration for each turn and automatically triggers a turn change when the time expires.
// gameFlowManager - GameFlowManager Responsibilities:
    Track Turns: Maintain a list of players and an index to know whose turn it is.
    Turn Conditions: Decide when a turn ends (time expiry or player action).
    Player Actions: Ensure only the active player’s input is processed.

Progress :
Unity Hub
- Editor Installation
- Initial Scripting : turnTimer.cs, gameFlowManager.cs
Docker
- ?

Future Notes :
Unity Hub
- Usage Guide : https://youtu.be/JEP5lgpVVXw
- Build Support For Other Devices
  - Add Build Support : If you plan to build for Android, iOS, or other platforms, look for an “Add modules” or “Add components” option during installation.This allows you 
    to select Android Build Support, WebGL, etc. If you don’t see it right away, you can add these modules later by clicking the Settings (gear icon) next to the installed 
    Unity version in the Installs tab.
- Turn Based Utility : https://www.youtube.com/watch?v=_1pz_ohupPs

Progress Report on AI Storytelling Game
Project Overview
The AI Storytelling Game is an interactive, multiplayer, and AI-driven narrative game. The story dynamically evolves based on player choices, with characters and scenarios adapting to the player’s actions. The game features comic book-style visuals, AI-generated voices, and a multiplayer voting system, allowing continuous gameplay even when players disconnect.

Current Status
Basic Story Generation:

The game generates an initial story based on player input. The player chooses a character name, and a basic storyline is created, e.g., "You, [character], fought a fierce dragon."

Interactive Gameplay Loop:

Players are asked to make decisions that affect the direction of the story (e.g., "Explore the forest," "Walk back to the village," etc.).

The story updates based on the player's choice, creating an evolving narrative.

Player Input Handling:

Simple text-based decisions are processed and the story is modified accordingly. This forms the core of the interactive storytelling system.

Achievements
Initial Game Framework:

Implemented the core game logic where the user provides a character name and the game generates an introductory story based on that.

Story Evolution:

Created the decision-making system that adjusts the storyline based on player input.

Player Interaction:

Players can shape the direction of the game via choices, setting up the foundation for a deeper, more personalized narrative experience.

Pending Tasks
AI-Driven Story Generation:

The next step is integrating a powerful language model (like GPT-2 or others) to generate the storyline dynamically.

Character Consistency & Emotion AI:

Implementing AI systems that ensure consistent character behavior and emotional responses based on player interaction.

Art Generation:

Using AI tools (such as Stable Diffusion XL) to create comic-style visuals that match the evolving narrative.

Voice Acting:

Integrating AI-driven voice generation (e.g., Amazon Polly) for dynamic character voices during the game.

Multiplayer Functionality:

Developing the multiplayer voting system and AI intervention when players are inactive.

Adaptive Difficulty:

Implementing difficulty adjustment based on player actions and decisions to create a more challenging experience.

Next Steps
Integrating Story Generation AI:

Begin integrating a language model (e.g., GPT-2) to generate a dynamic and evolving storyline.

Expanding the Narrative:

Add more detailed choices and branching scenarios, allowing for a more immersive experience.

Multiplayer Logic:

Implement voting systems and AI intervention for multiplayer functionality.

Once the AI-driven storytelling system and other key features are implemented, the game will provide a more immersive, personalized, and continuously evolving experience for players.








AI Storytelling Game: A Detailed Overview (No Paid Services)
Game Concept
The AI Storytelling Game is a multiplayer interactive narrative game where the storyline is dynamically shaped by player choices and AI-driven interactions. It combines AI storytelling, comic book-style art, voice generation, and emotion-based NPC responses to create a rich and immersive experience. Players’ choices affect the plot, characters, and world, while the AI adapts the game world based on decisions.

Core Features
1. AI-Driven Storytelling
Story Generation:

The game uses GPT-2 or GPT-Neo (open-source models) for generating coherent and engaging storylines based on player inputs. The AI dynamically crafts the narrative, ensuring each playthrough is unique and shaped by player decisions.

Adaptive Difficulty:

Fine-Tuned GPT-2 or GPT-Neo is used for adjusting the difficulty based on player performance, ensuring a balanced challenge as players progress.

Emotion AI:

BERT or DistilBERT can be used for emotion recognition to adjust NPC reactions based on the player's interactions. This allows the NPCs to respond emotionally to the player's tone and choices.

2. Game Art and Style
Comic/Manga Style:

Stable Diffusion (open-source) is used to generate AI-generated comic book and manga-style art for characters, settings, and actions. The images are dynamically created based on the evolving narrative, adapting to the player's choices.

Art Assets:

For static images (backgrounds, NPCs, etc.), you can use open-source tools like Blender to create assets or use public domain repositories like OpenGameArt.org.

3. Voice Acting (Free AI Voice Generation)
AI-Generated Voice Acting:

Instead of Amazon Polly, you can use OpenTTS or Coqui.ai (open-source alternatives) to generate character voices. These platforms provide free, AI-generated speech synthesis, allowing characters to have voiceovers in response to player interactions.

4. Multiplayer System
Dynamic Multiplayer System:

Use open-source multiplayer frameworks like Mirror for Unity to manage multiplayer aspects. Players can disconnect, and the AI will temporarily take over their role. When the player returns, they can continue their adventure seamlessly.

Voting System:

Players vote on key decisions, with the system ensuring that the decisions are weighted based on player activity. The game AI will take over if the player is inactive for too long.

5. Turn-Based Gameplay
Time-Limited Decision Making:

Players have 1.5 minutes to make decisions, and if they fail to respond, the AI generates the next scenario. This keeps the game progressing at a steady pace.

Interactive Choices & Adaptive Responses:

Players select the genre and world at the start (e.g., fantasy, sci-fi, mystery), and the AI adapts the plot and characters to fit the chosen setting.

6. AI Decision Log
Transparency:

A log of AI decisions is maintained so players can review the actions taken by the AI during their absence. This ensures full transparency, and players can see how the AI has shaped the narrative.

7. Adaptive Responses & Story Integration
World & Genre Customization:

At the start of the game, players choose the genre and world (e.g., high fantasy, cyberpunk, historical). Based on these choices, the AI generates the story, settings, characters, and challenges that fit the selected genre.

Technological Stack (Free and Open-Source)
AI Frameworks (No Paid Services)
GPT-2 or GPT-Neo:

These open-source models are capable of generating engaging narratives and adapting them based on player input. Fine-tuning them with your own data (e.g., past player decisions) can allow for more specific and context-aware story creation.

BERT or DistilBERT (for Emotion AI):

For detecting emotions based on text input and adjusting NPC reactions accordingly. These models are available in open-source libraries like Hugging Face's transformers package.

Stable Diffusion:

For generating comic book-style art and in-game visuals. This open-source model allows you to generate high-quality visuals for characters, environments, and action scenes based on the narrative.

OpenTTS or Coqui.ai:

These are free, open-source alternatives to Amazon Polly for generating AI voice acting for characters in real-time. They can synthesize voices dynamically based on the story.

Game Engine
Unity:

Unity remains the engine of choice for integrating all AI systems, multiplayer logic, and interactive storytelling. Unity is free for developers who make under a certain revenue threshold, which is ideal for indie developers or those with limited resources.

Mirror (for Unity):

An open-source networking framework that supports multiplayer functionality. It helps integrate multiplayer logic without relying on paid services.

Art & Assets
Blender:

Blender is an open-source 3D modeling and rendering tool. It can be used to create or modify game assets and environments for the game. For 2D art, you can use GIMP or Krita, which are also open-source alternatives for designing visual elements.

OpenGameArt.org:

A public domain resource offering free-to-use art and sound assets. You can source many different character models, backgrounds, and other resources from this platform.

Implementation Phases
Phase 1: AI System Integration
Integrate GPT-2 or GPT-Neo for story generation and DistilBERT or BERT for NPC emotional responses.

Set up Stable Diffusion for art generation and OpenTTS/Coqui.ai for AI-driven voice acting.

Phase 2: Art and Asset Creation
Use Blender and other open-source tools to design or modify art assets.

Generate new artwork dynamically using Stable Diffusion based on story developments.

Phase 3: Multiplayer and Voting System
Implement Mirror for Unity to support multiplayer functionality, ensuring players can join, leave, and vote on decisions.

Phase 4: Testing and Refining Dynamic Storytelling
Continuously test how the AI adapts to player decisions, how the art evolves with the story, and how well voice acting integrates with the gameplay.

Summary
This AI Storytelling Game aims to provide an engaging and immersive storytelling experience using only free and open-source tools. With AI-driven story generation, character consistency, dynamic voice acting, and AI-generated art, the game creates a rich narrative environment. By leveraging technologies like GPT-2, Stable Diffusion, OpenTTS, and Unity, this project offers a scalable, open-source solution that avoids any paid services while delivering an engaging gameplay experience.
